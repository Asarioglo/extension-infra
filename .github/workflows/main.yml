name: Build and Deploy Docker Image

on:
  push:
    branches:
      - main  # Change to your desired branch

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    env:
      AWS_REGION: "us-west-2"  # Specify your AWS region here
      ECR_REPOSITORY: "your-ecr-repo"  # Replace with your ECR repository name
      IMAGE_TAG: "${{ github.sha }}"  # Use the commit SHA as the image tag

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Generate .env file
      run: |
        echo "MY_VAR1=${{ secrets.MY_SECRET1 }}" >> .env
        echo "MY_VAR2=${{ secrets.MY_SECRET2 }}" >> .env
        # Add any other environment variables here

    - name: Build Docker image using Docker Compose
      run: docker-compose -f docker-compose.yml build

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Login to Amazon ECR
      run: |
        aws ecr get-login-password --region ${{ env.AWS_REGION }} \
          | docker login --username AWS --password-stdin "${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com"

    - name: Tag and Push Docker image to ECR
      run: |
        IMAGE_URI="${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/${{ env.ECR_REPOSITORY }}:${{ env.IMAGE_TAG }}"
        docker tag your-service-name ${IMAGE_URI}  # Replace 'your-service-name' with the actual service name in docker-compose
        docker push ${IMAGE_URI}

    - name: SSH into remote server and update files
      uses: appleboy/ssh-action@v0.1.7
      with:
        host: ${{ secrets.REMOTE_HOST }}
        username: ${{ secrets.REMOTE_USER }}
        key: ${{ secrets.REMOTE_SSH_KEY }}
        port: 22
        script: |
          # Create or replace .env file
          echo "MY_VAR1=${{ secrets.MY_SECRET1 }}" > /path/to/your/remote/.env  # Specify the correct remote path
          echo "MY_VAR2=${{ secrets.MY_SECRET2 }}" >> /path/to/your/remote/.env
          
          # Replace Dockerfile if needed
          scp Dockerfile /path/to/your/remote/

          # Navigate to the directory with your docker-compose.yml and start/restart
          cd /path/to/your/remote/docker-compose-directory
          docker-compose down
          docker-compose up -d
